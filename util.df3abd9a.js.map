{"mappings":"A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,C,Q,C,Q,S,C,C,C,ECAO,SAAS,EAAiB,CAAI,EACnC,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,IAAM,EAAa,IAAI,WACrB,EAAW,gBAAA,CAAiB,UAAW,KACrC,IAAI,EAAe,EAAW,MAA9B,CACA,GAAI,CACF,EAAe,AAYlB,SAAwB,CAAI,EACjC,IAAI,EAAK,GACT,GAAI,CACF,EAAK,KAAK,KAAA,CAAM,EAClB,CAAE,MAAO,EAAK,CACZ,MAAM,AAAI,MAAM,eAClB,CACA,OAAO,CACT,EApBuC,EAAW,MAAxC,CACF,CAAE,MAAO,EAAK,CACZ,EAAO,EACT,CACA,EAAQ,EACZ,GACI,GACF,EAAW,UAAA,CAAW,EAE1B,EACF,C,O,c,C,E,O,C,kB,C,I,W,O,C,E,I,K,E,W,C,E,a,C,C,E","sources":["<anon>","src/util.js"],"sourcesContent":["(function () {\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar parcelRequire = $parcel$global[\"parcelRequirec758\"];\nparcelRequire.register(\"fjYbb\", function(module, exports) {\n\n$parcel$export(module.exports, \"parseFileAsJson\", function () { return $b2774fbc73ccc7f7$export$35287653ae0ce3cd; });\nfunction $b2774fbc73ccc7f7$export$35287653ae0ce3cd(file) {\n    return new Promise((resolve, reject)=>{\n        const fileReader = new FileReader();\n        fileReader.addEventListener(\"loadend\", ()=>{\n            let fileContents = fileReader.result;\n            try {\n                fileContents = $b2774fbc73ccc7f7$export$84137bb44359aed5(fileReader.result);\n            } catch (err) {\n                reject(err);\n            }\n            resolve(fileContents);\n        });\n        if (file) fileReader.readAsText(file);\n    });\n}\nfunction $b2774fbc73ccc7f7$export$84137bb44359aed5(json) {\n    let sj = \"\";\n    try {\n        sj = JSON.parse(json);\n    } catch (err) {\n        throw new Error(\"Invalid JSON\");\n    }\n    return sj;\n}\n\n});\n\n})();\n//# sourceMappingURL=util.df3abd9a.js.map\n","export function parseFileAsJson (file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n      fileReader.addEventListener('loadend', () => {\n        let fileContents = fileReader.result;\n        try {\n          fileContents = safeJsonParse(fileReader.result);\n        } catch (err) {\n          reject(err);\n        }\n        resolve(fileContents);\n    });\n    if (file) {\n      fileReader.readAsText(file);\n    }\n  });\n}\n\nexport function safeJsonParse (json) {\n  let sj = '';\n  try {\n    sj = JSON.parse(json)\n  } catch (err) {\n    throw new Error('Invalid JSON');\n  }\n  return sj;\n}"],"names":["globalThis","self","window","global","register","module","exports","$b2774fbc73ccc7f7$export$35287653ae0ce3cd","file","Promise","resolve","reject","fileReader","FileReader","addEventListener","fileContents","result","$b2774fbc73ccc7f7$export$84137bb44359aed5","json","sj","JSON","parse","err","Error","readAsText","Object","defineProperty","get","set","s","enumerable","configurable"],"version":3,"file":"util.df3abd9a.js.map"}